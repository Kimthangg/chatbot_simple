import streamlit as st
import time
from bot.agent import gemini_chatbot
from bot.pipe_rag import get_answer
from bot.agent_intent import supervised_model

st.set_page_config(page_title="Chat v·ªõi Gemini", page_icon="üí¨")
st.title("ü§ñ Chatbot Gemini")


for message in st.session_state.chat_history.messages:
    if message.type == "AIMessageChunk": #Lo·∫°i c·ªßa n√≥ l√† AIMessageChunk nh∆∞ng web hi·ªÉu l√† assistant m·ªõi ƒë√∫ng
        message.type = "assistant"
    with st.chat_message(message.type):
        st.markdown(message.content)


# Nh·∫≠p tin nh·∫Øn m·ªõi
prompt = st.chat_input("Nh·∫≠p tin nh·∫Øn...")
if prompt:
    with st.chat_message("user"):
        st.markdown(prompt)
    
    # X·ª≠ l√Ω tin nh·∫Øn c·ªßa assistant
    with st.chat_message("assistant"):
        response_container = st.empty()
        response_text = ""
        
        intent = supervised_model(prompt)
        if intent == 'C√≥':
            # response_text = get_answer(prompt)
            for chunk in get_answer(prompt):
                time.sleep(0.01)
                response_text += chunk
                response_container.markdown(response_text + "‚ñå")  # Hi·ªÉn th·ªã hi·ªáu ·ª©ng typing
                
            #L∆∞u c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi v√†o l·ªãch s·ª≠ h·ªôi tho·∫°i
            st.session_state.chat_history.add_user_message(prompt)
            st.session_state.chat_history.add_ai_message(response_text)
        else:
            # G·ªçi API v√† x·ª≠ l√Ω stream
            for chunk in gemini_chatbot(prompt):
                chunk_split = chunk.content.split(' ')
                for chunk_nho in chunk_split:
                    time.sleep(0.01)  # Gi·∫£ l·∫≠p typing
                    response_text += chunk_nho + " "
                    response_container.markdown(response_text + "‚ñå")  # Hi·ªÉn th·ªã hi·ªáu ·ª©ng typing
        response_container.markdown(response_text)  # X√≥a hi·ªáu ·ª©ng khi ho√†n t·∫•t